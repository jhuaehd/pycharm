MODULE 1. SOFTWARES
1. Software - collection of computer programs that helps us to perform a task.
2. Types of software
	a. S Software
	    - device drivers, Operating systems, servers, utilities
	b. Programming software
        - compilers, debuggers, interpreters
	c. Application software
		- Web app, Mobile app, Desktop app

3. SOFTWARE TESTING – a part of software development process.
                 - An activity to detect and identify the defects in the software. The objective of testing is to release quality product to the client.
4. SOFTWARE QUALITY – bug free,  delivered on time, within the budget, meet requirements and expectations, maintainable

5. PROJECT VS PRODUCT
        If software application is developed for specific customer based on the requirement then it is called PROJECT.
        If software application developed for multiple customers based on market requirements then it called PRODUCT.

6. WHY DO WE NEED TESTING ? –  to ensure software don’t have any bugs, to ensure it will satisfy the requirements and expectation of the client and deliver the software in exact time.

7. ERROR, BUG AND ERROR
        - an incorrect human action is ERROR, human mistake
        - unwanted feature is BUG, mismatch feature, defect
        - something that is not working in the application after the deployment to client

8. WHY SOFTWARE HAS BUGS
        - miscommunication or no communication
        - software complexity
        - Programming errors
        - Changing in requirements
        - lack of skilled testers

9. SDLC(SOFTWARE DEVELOPMENT LIFE CYCLE)
        - is a process used by software industry to design, develop and test softwares
        - in a company there should have 3P's (People, Process, Product) to develop the software
    Hierarchy :
        a. Requirements Analysis
        b. Design
        c. Development
        d. Testing
        e. Maintenance

10. WATERFALL MODEL
        - old and traditional model
    Hierarchy :
        a. Requirement analysis (includes Software requirements from the client/user)
        b. System Design(low-level design
        c. Implementation
        d. Testing
        e. Deployment
        f. Maintenance
    Advantages :
        - Quality of the product will be good
        - Since requirement changes are not allowed, chances of finding bugs will be less
        - Initial investment is less since the testers are hired at the later stages
        - Preferred for small projects where requierements are freezed
    Disadvantages :
        - Requirement changes are not allowed
        - if there is defect in requierement that will be continue in later phases.
        - Total invesment is more because time taking for rework on defect is time consuming which leads
          to high invesment
        - testing will start only after coding / 1 phase of testing

11. SPIRAL MODEL
        a. Planning (Requirement analysis)
        b. Risk Analysis ( Prototype )
        c. Engineering and Execution (Development and Testing)
        d. Evaluation (Customer Evaluation and Feedback)
        - is an iterative model
        - overcome drawbacks of waterfall model
        - we follow spiral model whenever there is dependency on the modules
        - in every cycle new software will be released to customer(software version)
        - software will be releasesd in multiple version. So it also called "VERSION CONTROL MODEL."

    Advantages:
        - Testing is done in every cycle, before going to the next cycle
        - Customer will get to use the software for every module
        - requirement changes are allowed after every cycle before going to the next cycle
