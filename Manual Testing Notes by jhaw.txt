MODULE 1. SOFTWARES
1. Software - collection of computer programs that helps us to perform a task.
2. Types of software
	a. S Software
	    - device drivers, Operating systems, servers, utilities
	b. Programming software
        - compilers, debuggers, interpreters
	c. Application software
		- Web app, Mobile app, Desktop app

3. SOFTWARE TESTING – a part of software development process.
                 - An activity to detect and identify the defects in the software. The objective of testing is to release quality product to the client.
4. SOFTWARE QUALITY – bug free,  delivered on time, within the budget, meet requirements and expectations, maintainable

5. PROJECT VS PRODUCT
        If software application is developed for specific customer based on the requirement then it is called PROJECT.
        If software application developed for multiple customers based on market requirements then it called PRODUCT.

6. WHY DO WE NEED TESTING ? –  to ensure software don’t have any bugs, to ensure it will satisfy the requirements and expectation of the client and deliver the software in exact time.

7. ERROR, BUG AND ERROR
        - an incorrect human action is ERROR, human mistake
        - unwanted feature is BUG, mismatch feature, defect
        - something that is not working in the application after the deployment to client

8. WHY SOFTWARE HAS BUGS
        - miscommunication or no communication
        - software complexity
        - Programming errors
        - Changing in requirements
        - lack of skilled testers

9. SDLC(SOFTWARE DEVELOPMENT LIFE CYCLE)
        - is a process used by software industry to design, develop and test softwares
        - in a company there should have 3P's (People, Process, Product) to develop the software
    Hierarchy :
        a. Requirements Analysis
        b. Design
        c. Development
        d. Testing
        e. Maintenance

10. WATERFALL MODEL
        - old and traditional model
    Hierarchy :
        a. Requirement analysis (includes Software requirements from the client/user)
        b. System Design(low-level design
        c. Implementation
        d. Testing
        e. Deployment
        f. Maintenance
    Advantages :
        - Quality of the product will be good
        - Since requirement changes are not allowed, chances of finding bugs will be less
        - Initial investment is less since the testers are hired at the later stages
        - Preferred for small projects where requierements are freezed
    Disadvantages :
        - Requirement changes are not allowed
        - if there is defect in requierement that will be continue in later phases.
        - Total invesment is more because time taking for rework on defect is time consuming which leads
          to high invesment
        - testing will start only after coding / 1 phase of testing

11. SPIRAL MODEL
        a. Planning (Requirement analysis)
        b. Risk Analysis ( Prototype )
        c. Engineering and Execution (Development and Testing)
        d. Evaluation (Customer Evaluation and Feedback)
        - is an iterative model
        - overcome drawbacks of waterfall model
        - we follow spiral model whenever there is dependency on the modules
        - in every cycle new software will be released to customer(software version)
        - software will be releasesd in multiple version. So it also called "VERSION CONTROL MODEL."

    Advantages:
        - Testing is done in every cycle, before going to the next cycle
        - Customer will get to use the software for every module
        - requirement changes are allowed after every cycle before going to the next cycle

    Disadvantages :
        - Requirement changes are not allowed during or in between the cycle
        - Every cycle of spiral model looks like waterfall model
        - there is no testing in requirement and design phase

12. Prototype Model
        - blue print of the software
        - Inititial requierements from the client  > Prototype > Customer > desing, coding, testing

13. V-Model(VV Model, Verification and Validation model)
        - in every phase, there is a testing

    -VERIFICATION                              - VALIDATION
        - BRS/CRS/URS  ---------------->    - USER ACCEPTANCE TESTING

            - SRS                       - SYSTEM TESTING

                - HLD               - INTEGRATION TESTING

                    - LLD       - UNIT TESTING

                        - CODING


    - BRS/CRS/URS , Business requirements  given by the clients
        - Business unity
    - SRS, software classification requirements ( DFD diagrams )
        - Project Manager
    - HLD(HIGH LEVEL DESIGN), LLD(LOW LEVEL DESIGN)
        - DESIGNERS, diagrams
    Techniques in testing:
        - review, walkthrough, inspection
    Static testing techniques
        - testing the project related documents
        - review, walkthrough, inspection
    DYNAMIC TESTING
        - testing the actual software
        - unit testing
        - integration testing
        - testing the software

    WHITE BOX TESTING
        - is done by the developers himself
        - includes Integration testing and unit testing
        - knows what inside the box(code structures)
    BLACK BOX TESTING
        - is done by the testers
        - don't need programming language in this test
        - don't know what inside the box(code structure)
    VERIFICATION
        - checks wether we are building the right product
        - focus on documentation
        - verification typically involves
        - reviews, walkthrough, inspection
        - related to static type of testing
    VALIDATION
        - checks the actual software
        - checks whether we are building the product right
        - takes place after verification si complete
        - focus on software
        - typically involves actual testing
        - unit testing, integration testing, UAT testing(user acceptance)
        - dynamic testing involve
    ADVANTAGES OF V MODEL :
        - testing is involve in every phase
    DISADVANTAGES :
        - initial investment is pricy, expensive, high cost
        - documentation is more

    --------- REVIEW, WALKTHROUGH, INSPECTIO ---------

    REVIEW
        - conducts on documents to ensure correctness and completenes
        - requirement review, design review, code review, test plan review, test cases review
    WALKTHROUGH
        - an informal review( no proper plan)
        - author read the documents or code and discuss with the peers
        - not pre-planned and can be done whenever required
        - does not have minutes of the meet
    INSPECTION
        - most formal review type
        - at least 3-8 people will sit in the meeting
            1. reader
            2. writer
            3. moderator
        - inspection will have a proper schedule which will intimated via email to the concerned developer/tester.
-----------------------------------------------------------------------------------------------------------------------
    QA, QC, QE
        QA(QUALITY ASSURANCE)
            - process related
            - a design or focuses for building the quality
            - preventing defects
            - process oriented
            - for entire life cycle
        QC(QUALITY CONTROL)
            - the actual testing of the software
            - focuses on testing the quality
            - detecting defects
            - product oriented
            - for testing part in SDLC
        QE(QUALITY ENGINEERING)
            - writing the code to test the software

        3P's
        P-eople --> QC(testers)
            - focuses on testing the quality
        P-rocess --> QA
            - a design or focuses for building the quality
        P-roduct

    LEVELS OF SOFTWARE TESTING ---

        UNIT TESTING
            
        INTEGRATION TESTING

        SYSTEM TESTING

        USER ACCEPTANCE TESTING

aAAaa